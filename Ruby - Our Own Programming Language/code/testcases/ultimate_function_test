fun greet(name)
{
	output("Hello " . name . "!");
}
greet("Alexander");
greet("Gustav");

fun eat(kilos = 1, food = "Pizza")
{
	output("You just ate " . kilos . " of " . food);
}
eat();
eat(10);
eat(100, "Carrot");  //Are you some kind of horse?

fun sleep(time, location = "Bed")
{
	output("You will now sleep for " . time . " minutes in the " . location);
}

sleep(30);
sleep(120, "train");
sleep(300, "couch");

//Recursive function calculating factorial numbers
fun fact(n)
{
	if (n <= 1)
	{
		return 1;
	}
	return n * fact(n - 1);  //Here's a problem with negative numbers
}

output(fact(1) . "=1?");
output(fact(2) . "=2?");
output(fact(5) . "=120?");
output(fact(7) . "=5040?");

fun no_para()
{
	output("JAG HAR INGA PARA");
}

fun no_def(x)
{
	output("JAG HAR INGA DEF " . x);
}

fun only_def(x=0)
{
	output("JAG HAR BARA DEF " . x);
}

fun mult_def(x=0,b=0)
{
	output("MÅNGA DEF " . x . " " . b);
}

fun def_and_no_def(a,x=0)
{
	output("OLIKA " . a . " " . x);
}

no_para();
no_def(5);
only_def();
only_def(5);
mult_def();
mult_def(5);
mult_def(5,5);
mult_def(1,5);
def_and_no_def(5);
def_and_no_def(5,5);




fun hejsan()
{
  loop (5)
  {
    output("hejsan");
  }
}

hejsan();

fun sum(a,b)
{
	return a+b;
}

x = sum(10,15);
output(x . "=25?");

x = sum(sum(8,2), 5);
output(x . "=15?");

x = sum(sum(8,2), sum(6,4));
output(x . "=20?");

fun test(x)
{
	fun test2(x)
	{
		return x^2;
	}
	return test2(x);
}

x = test(38);
output(x . "=1444?");

fun hej(x)
{
	// return a;
	return x;
}

fun hej2(a)
{
	x = 100;
	return hej(a);
}

output(hej2(5));

hej = "Jag är global";
fun global(a)
{
	return hej;
}

output(global("?"));


fun test1()
{
    fun test2()
    {
        x=26;
        return x;
    }
    return test2();
}

x = test1();
output(x . "=26?");

x = 1444;
fun test1()
{
    fun test2()
    {
        return x;
    }
    return test2();
}

x = test1();
output(x . "=1444?");

fun test1()
{
	x = 38;
    fun test2()
    {
        return x;
    }
    return test2();
}

x = test1();
output(x . "=38?");
x = test1()^2;
output(x . "=1444?");


fun test1()
{
    fun test2()
    {
		x = 26;
        return x;
    }
    return test2();
}

x = test1();
output(x . "=26?");